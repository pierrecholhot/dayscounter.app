{"version":3,"sources":["components/Color/Color.styles.js","components/Color/Color.js","components/Days/Days.styles.js","components/Days/Days.js","components/DateCardActions/DateCardActions.js","utils/formatDate.js","utils/normalizeDate.js","utils/today.js","utils/useCardColors.js","components/DateCard/DateCard.styles.js","components/DateCard/DateCard.js","components/DateCardList/DateCardList.styles.js","components/DateCardList/DateCardList.js","components/ColorPicker/ColorPicker.styles.js","components/ColorPicker/ColorPicker.js","components/MicroButton/MicroButton.styles.js","components/MicroButton/MicroButton.js","components/InputOutline/InputOutline.styles.js","components/InputOutline/InputOutline.js","constants/suggestions.js","utils/backToTheFuture.js","components/EntryUpdater/EntryUpdater.styles.js","components/EntryUpdater/EntryUpdater.js","components/Footer/Footer.js","components/CTA/CTA.styles.js","components/CTA/CTA.js","components/Header/Header.styles.js","components/Header/Header.js","constants/examples.js","utils/bigData.js","utils/sortDates.js","containers/App/App.styles.js","containers/App/App.js","utils/useUpdateNotification.js","constants/theme.js","utils/makeTheme.js","containers/Root/Root.js","serviceWorker.js","utils/broadcastSWUpdate.js","index.js"],"names":["makeStyles","theme","root","props","pointerEvents","interactive","transition","transitions","create","name","Color","code","selected","size","className","classes","useStyles","iconStyle","width","height","color","Radio","tabIndex","value","checked","cx","icon","style","checkedIcon","defaultProps","fontWeight","palette","primary","light","whiteSpace","lineHeight","Days","Typography","variant","component","DateCardActions","id","onRequestEdit","onRequestDuplicate","onRequestDelete","React","useState","open","anchor","state","setState","hideMenu","ListItemSecondaryAction","IconButton","aria-controls","aria-haspopup","onClick","e","currentTarget","Menu","anchorEl","onClose","transformOrigin","vertical","horizontal","MenuItem","ListItemIcon","ListItemText","date","dayjs","format","startOf","normalizeDate","Date","useCardColors","colors","useTheme","shade","type","divider","purple","amber","deepOrange","blue","red","yellow","pink","teal","indigo","green","getColorValueByIndex","index","getColorIndexByValue","findIndex","getRandomColor","Math","floor","random","length","li","minHeight","display","paddingRight","spacing","when","marginLeft","label","overflowWrap","skeleton","margin","DateCard","cardColors","hidden","setHidden","djsDate","data","daysDiff","abs","diff","today","relativeDate","isBefore","from","to","dateInfo","formatDate","handleDelete","handleEdit","handleDupe","Fragment","Collapse","in","deleted","onEnter","onExited","dividerBefore","Divider","ListItem","isValid","Skeleton","secondary","dividerAfter","overflow","list","padding","DateCardList","single","subheader","children","Paper","square","elevation","ListSubheader","List","flexDirection","justifyContent","breakpoints","down","ColorPicker","onSelect","rootProps","onChange","target","RadioGroup","map","key","typography","body2","outline","main","background","border","cursor","textDecoration","MicroButton","position","marginTop","wrapper","content","borderRadius","shape","inputLabel","left","top","transform","notch","borderColor","InputOutline","helperText","labelWidth","setLabelWidth","labelRef","useRef","useEffect","labelNode","ReactDOM","findDOMNode","current","offsetWidth","InputLabel","ref","htmlFor","shrink","notched","FormHelperText","future","set","year","suggestions","textAlign","suggestionButton","marginRight","colorsWrapper","picker","dialogPaper","backgroundColor","default","formContent","EntryUpdater","fullScreen","useMediaQuery","entryData","isEditing","randomColor","now","newId","newDate","setNewDate","newLabel","setNewLabel","newColor","setNewColor","previewData","handleCancel","onRequestSave","Dialog","disableBackdropClick","fullWidth","maxWidth","aria-labelledby","PaperProps","DialogTitle","DialogContent","event","backToTheFuture","handleInputSuggestion","showToolbar","inputFormat","autoOk","minDate","maxDate","renderInput","TextField","required","error","InputLabelProps","idx","DialogActions","Button","disabled","usePrivacyState","createPersistedState","Footer","showPrivacy","setShowPrivacy","openSource","href","rel","madeWithLove","themeSwitcher","onRequestSwitchTheme","gutterBottom","CTA","baseProps","startIcon","title","fontSize","up","h1","right","intro","h4","Header","onRequestCreate","bigInt","number","sortDatesDsc","sort","a","b","header","headers","paddingTop","examples","alignItems","flex","footer","marginBottom","useDataStoreState","App","useSnackbar","enqueueSnackbar","closeSnackbar","updateNotification","opts","persist","preventDuplicate","action","window","location","reload","show","hide","useUpdateNotification","isCreatingEntry","setIsCreatingEntry","cardBeingEdited","setCardBeingEdited","datastore","setDatastore","deletedEntries","filter","handleRequestDelete","payload","handleRequestUpdate","renderSnackbarUndo","reason","cds","entry","handleActualDelete","el","updatedDatastore","handleRequestCreate","handleRequestUndo","renderCard","handleRequestDuplicate","getTotalCount","bigList","total","totalWithoutDeleted","renderCounters","counters","addEventListener","once","Grid","grid","container","item","xs","xl","lg","justify","Hidden","only","implementation","withDates","renderExamples","renderUpcomingCounters","sortDatesAsc","renderPastCounters","headingsFontFamily","grey","dark","paperBackgroundColor","primaryColor","cyan","secondaryColor","selectionColor","lime","Root","isDarkTheme","setIsDarkTheme","prefersDarkMode","createMuiTheme","paper","contrastText","fontFamily","overrides","MuiBackdrop","MuiPaper","transitionProperty","transitionDuration","transitionTimingFunction","MuiListSubheader","sticky","MuiCssBaseline","body","makeTheme","ThemeProvider","CssBaseline","dateAdapter","DayJsUtils","maxSnack","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","waiting","unregister","postMessage","dispatchEvent","Event","extend","advancedFormat","relativeTime","render","StrictMode","document","getElementById","URL","process","origin","fetch","response","contentType","get","status","indexOf","ready","checkValidServiceWorker","broadcastSWUpdate","version"],"mappings":"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","file":"static/js/main.0c808175.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles'\nimport { name } from './package.json'\n\nconst styles = theme => ({\n  root: props => {\n    return {\n      pointerEvents: props.interactive ? 'inherit' : 'none',\n\n      '& svg': {\n        transition: theme.transitions.create('color'),\n      },\n    }\n  },\n})\n\nexport default makeStyles(styles, { name })\n","import React from 'react'\nimport cx from 'classnames'\n\nimport Radio from '@material-ui/core/Radio'\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord'\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked'\n\nimport useStyles from './Color.styles.js'\n\nfunction Color({ code, selected, interactive, size, className, ...props }) {\n  const classes = useStyles({ code, selected, interactive })\n  const iconStyle = { width: size, height: size, color: code }\n\n  return (\n    <Radio\n      tabIndex={interactive ? null : -1}\n      value={code}\n      checked={selected}\n      className={cx(classes.root, className)}\n      icon={<FiberManualRecordIcon style={iconStyle} />}\n      checkedIcon={<RadioButtonCheckedIcon style={iconStyle} />}\n    />\n  )\n}\n\nColor.defaultProps = {\n  size: 28,\n}\n\nexport default Color\n","import { makeStyles } from '@material-ui/core/styles'\nimport { name } from './package.json'\n\nconst styles = theme => ({\n  root: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.light,\n    whiteSpace: 'nowrap',\n    lineHeight: 1,\n  },\n})\n\nexport default makeStyles(styles, { name })\n","import React from 'react'\nimport cx from 'classnames'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport useStyles from './Days.styles.js'\n\nfunction Days({ className, ...props }) {\n  const classes = useStyles()\n  return <Typography variant=\"h6\" component=\"span\" className={cx(classes.root, className)} {...props} />\n}\n\nexport default Days\n","import React from 'react'\n\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport IconButton from '@material-ui/core/IconButton'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\n\nfunction DateCardActions({ id, onRequestEdit, onRequestDuplicate, onRequestDelete }) {\n  const [state, setState] = React.useState({\n    open: false,\n    anchor: null,\n  })\n\n  const hideMenu = () => {\n    setState({ open: false, anchor: null })\n  }\n\n  const handleDelete = e => {\n    hideMenu()\n    if (onRequestDelete) {\n      onRequestDelete()\n    }\n  }\n\n  const handleEdit = e => {\n    hideMenu()\n    if (onRequestEdit) {\n      onRequestEdit()\n    }\n  }\n\n  const handleDupe = e => {\n    hideMenu()\n    if (onRequestDuplicate) {\n      onRequestDuplicate()\n    }\n  }\n\n  return (\n    <ListItemSecondaryAction>\n      <IconButton\n        aria-controls={id}\n        aria-haspopup=\"true\"\n        onClick={e => {\n          setState({ open: true, anchor: e.currentTarget })\n        }}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id={id}\n        anchorEl={state.anchor}\n        open={state.open}\n        onClose={hideMenu}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n      >\n        <MenuItem onClick={handleEdit}>\n          <ListItemIcon>\n            <EditIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Edit\" />\n        </MenuItem>\n        <MenuItem onClick={handleDupe}>\n          <ListItemIcon>\n            <FileCopyIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Duplicate\" />\n        </MenuItem>\n        <MenuItem onClick={handleDelete}>\n          <ListItemIcon>\n            <DeleteIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete Counter\" />\n        </MenuItem>\n      </Menu>\n    </ListItemSecondaryAction>\n  )\n}\n\nexport default DateCardActions\n","import dayjs from 'dayjs'\n\nexport default date => dayjs(date).format('MMMM Do, YYYY')\n","import dayjs from 'dayjs'\n\nexport default date => dayjs(date).startOf('day')\n","import normalizeDate from './normalizeDate'\n\nexport default normalizeDate(new Date())\n","import { useTheme } from '@material-ui/core/styles'\n\nimport purple from '@material-ui/core/colors/purple'\nimport deepOrange from '@material-ui/core/colors/deepOrange'\nimport amber from '@material-ui/core/colors/amber'\nimport blue from '@material-ui/core/colors/blue'\nimport red from '@material-ui/core/colors/red'\nimport yellow from '@material-ui/core/colors/yellow'\nimport pink from '@material-ui/core/colors/pink'\nimport teal from '@material-ui/core/colors/teal'\nimport indigo from '@material-ui/core/colors/indigo'\nimport green from '@material-ui/core/colors/green'\n\nexport default function useCardColors() {\n  const colors = []\n  const theme = useTheme()\n  const shade = theme.palette.type === 'dark' ? '400' : '300'\n\n  colors[0] = theme.palette.divider\n  colors[1] = purple[shade]\n  colors[2] = amber[shade]\n  colors[3] = deepOrange[shade]\n  colors[4] = blue[shade]\n  colors[5] = red[shade]\n  colors[6] = yellow[shade]\n  colors[7] = pink[shade]\n  colors[8] = teal[shade]\n  colors[9] = indigo[shade]\n  colors[10] = green[shade]\n\n  return {\n    colors,\n    getColorValueByIndex: (index = 0) => {\n      return colors[index] || colors[0]\n    },\n    getColorIndexByValue: value => {\n      return colors.findIndex(color => value === color) || 0\n    },\n    getRandomColor: () => {\n      return Math.floor(Math.random() * colors.length)\n    },\n  }\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport { name } from './package.json'\n\nconst styles = theme => ({\n  li: {\n    minHeight: 79,\n  },\n  primary: props => ({\n    display: 'block',\n    paddingRight: props.interactive ? theme.spacing(6) : null,\n  }),\n  when: {\n    marginLeft: theme.spacing(1),\n  },\n  label: {\n    marginLeft: theme.spacing(1),\n    overflowWrap: 'break-word',\n  },\n  skeleton: {\n    display: 'inline-block',\n    margin: theme.spacing(0.5, 1, 0.5, 0),\n  },\n})\n\nexport default makeStyles(styles, { name })\n","import React from 'react'\n\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport Collapse from '@material-ui/core/Collapse'\n\nimport Color from '../Color'\nimport Days from '../Days'\nimport DateCardActions from '../DateCardActions'\n\nimport formatDate from '../../utils/formatDate'\nimport normalizeDate from '../../utils/normalizeDate'\nimport today from '../../utils/today'\nimport useCardColors from '../../utils/useCardColors'\n\nimport useStyles from './DateCard.styles.js'\n\nfunction DateCard(props) {\n  const classes = useStyles(props)\n  const cardColors = useCardColors()\n  const [hidden, setHidden] = React.useState(false)\n\n  const djsDate = normalizeDate(props.data.date)\n  const daysDiff = Math.abs(djsDate.diff(today, 'day'))\n  const relativeDate = djsDate.isBefore(today) ? djsDate.from(today) : today.to(djsDate)\n  const dateInfo = `${formatDate(djsDate)} ${daysDiff > 25 ? `(${relativeDate})` : ''}`\n\n  const handleDelete = e => {\n    if (props.onRequestDelete) {\n      props.onRequestDelete()\n    }\n  }\n\n  const handleEdit = e => {\n    if (props.onRequestEdit) {\n      props.onRequestEdit()\n    }\n  }\n\n  const handleDupe = e => {\n    if (props.onRequestDuplicate) {\n      props.onRequestDuplicate()\n    }\n  }\n\n  const renderActions = () => {\n    if (!props.interactive) {\n      return null\n    }\n    return <DateCardActions id={props.data.id} onRequestEdit={handleEdit} onRequestDuplicate={handleDupe} onRequestDelete={handleDelete} />\n  }\n\n  const renderDaysDiff = () => {\n    if (daysDiff === 0) {\n      return <Days>Today</Days>\n    }\n    return (\n      <React.Fragment>\n        <Days>\n          {daysDiff} {daysDiff > 1 ? 'days' : 'day'}\n        </Days>\n        <Typography variant=\"body1\" component=\"span\" color=\"textSecondary\" className={classes.when}>\n          {djsDate.isBefore(today) ? 'since' : 'until'}\n        </Typography>\n      </React.Fragment>\n    )\n  }\n\n  const renderPrimaryText = () => {\n    return (\n      <span className={classes.primary}>\n        {renderDaysDiff()}\n        <Typography variant=\"body1\" component=\"span\" className={classes.label}>\n          {props.data.label || dateInfo}\n        </Typography>\n      </span>\n    )\n  }\n\n  const renderSecondaryText = () => {\n    return props.data.label ? dateInfo : null\n  }\n\n  return (\n    <React.Fragment>\n      <Collapse in={!props.data.deleted} onEnter={() => setHidden(false)} onExited={() => setHidden(true)}>\n        <div style={{ display: hidden ? 'none' : 'block' }}>\n          {props.dividerBefore ? <Divider component=\"div\" /> : null}\n          <ListItem component=\"div\" className={classes.li}>\n            <ListItemIcon>\n              <Color code={cardColors.getColorValueByIndex(djsDate.isValid() ? props.data.color : 0)} />\n            </ListItemIcon>\n            <ListItemText\n              primary={\n                djsDate.isValid() ? (\n                  renderPrimaryText()\n                ) : (\n                  <React.Fragment>\n                    <Skeleton className={classes.skeleton} variant=\"text\" width=\"15%\" />\n                    <Skeleton className={classes.skeleton} variant=\"text\" width=\"10%\" />\n                    <Skeleton className={classes.skeleton} variant=\"text\" width=\"40%\" />\n                  </React.Fragment>\n                )\n              }\n              secondary={djsDate.isValid() ? renderSecondaryText() : !!props.data.label && <Skeleton variant=\"text\" width=\"50%\" />}\n            />\n            {renderActions()}\n          </ListItem>\n          {props.dividerAfter ? <Divider component=\"div\" /> : null}\n        </div>\n      </Collapse>\n    </React.Fragment>\n  )\n}\n\nDateCard.defaultProps = {\n  dividerBefore: true,\n  dividerAfter: false,\n  interactive: true,\n}\n\nexport default DateCard\n","import { makeStyles } from '@material-ui/core/styles'\nimport { name } from './package.json'\n\nconst styles = theme => ({\n  root: {\n    overflow: 'hidden',\n  },\n  list: {\n    padding: 0,\n  },\n})\n\nexport default makeStyles(styles, { name })\n","import React from 'react'\nimport cx from 'classnames'\n\nimport Paper from '@material-ui/core/Paper'\nimport List from '@material-ui/core/List'\nimport ListSubheader from '@material-ui/core/ListSubheader'\n\nimport useStyles from './DateCardList.styles.js'\n\nfunction DateCardList({ single, subheader, className, children, ...props }) {\n  const classes = useStyles()\n\n  return (\n    <Paper square={single} elevation={0} className={cx(classes.root, className)}>\n      {subheader ? <ListSubheader component=\"div\">{subheader}</ListSubheader> : null}\n      <List component=\"div\" className={classes.list}>\n        {children}\n      </List>\n    </Paper>\n  )\n}\n\nexport default DateCardList\n","import { makeStyles } from '@material-ui/core/styles'\nimport { name } from './package.json'\n\nconst styles = theme => ({\n  list: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('sm')]: {\n      justifyContent: 'flex-start',\n    },\n  },\n})\n\nexport default makeStyles(styles, { name })\n","import React from 'react'\nimport cx from 'classnames'\n\nimport RadioGroup from '@material-ui/core/RadioGroup'\n\nimport Color from '../Color'\n\nimport useCardColors from '../../utils/useCardColors'\n\nimport useStyles from './ColorPicker.styles.js'\n\nfunction ColorPicker({ onSelect, selected, className, ...props }) {\n  const classes = useStyles()\n  const cardColors = useCardColors()\n\n  const rootProps = {\n    name: 'colors',\n    className: cx(classes.list, className),\n    onChange: e => {\n      onSelect(cardColors.getColorIndexByValue(e.target.value))\n    },\n    ...props,\n  }\n\n  return (\n    <RadioGroup {...rootProps}>\n      {cardColors.colors.map(color => (\n        <Color interactive key={color} code={color} selected={cardColors.colors[selected] === color} />\n      ))}\n    </RadioGroup>\n  )\n}\n\nexport default ColorPicker\n","import { makeStyles } from '@material-ui/core/styles'\nimport { name } from './package.json'\n\nconst styles = theme => ({\n  root: {\n    ...theme.typography.body2,\n    padding: 0,\n    margin: 0,\n    outline: '0 none',\n    color: theme.palette.primary.main,\n    background: 'none',\n    border: 0,\n    cursor: 'pointer',\n    '&:hover, &:focus': {\n      textDecoration: 'underline',\n    },\n  },\n})\n\nexport default makeStyles(styles, { name })\n","import React from 'react'\nimport cx from 'classnames'\n\nimport useStyles from './MicroButton.styles.js'\n\nfunction MicroButton({ className, ...props }) {\n  const classes = useStyles()\n  return <button className={cx(classes.root, className)} {...props} />\n}\n\nexport default MicroButton\n","import { makeStyles } from '@material-ui/core/styles'\nimport { name } from './package.json'\n\nconst styles = theme => ({\n  root: {\n    position: 'relative',\n    marginTop: theme.spacing(1),\n  },\n  wrapper: {\n    position: 'relative',\n  },\n  content: {\n    padding: theme.spacing(2),\n    borderRadius: theme.shape.borderRadius,\n  },\n  inputLabel: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    transform: `translate(0, ${theme.spacing(3)}px) scale(1)`,\n  },\n  notch: {\n    borderColor: theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)',\n  },\n})\n\nexport default makeStyles(styles, { name })\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport NotchedOutline from '@material-ui/core/OutlinedInput/NotchedOutline'\n\nimport useStyles from './InputOutline.styles.js'\n\nconst InputOutline = ({ id, label, helperText, children }) => {\n  const classes = useStyles()\n  const [labelWidth, setLabelWidth] = React.useState(0)\n  const labelRef = React.useRef(null)\n\n  React.useEffect(() => {\n    const labelNode = ReactDOM.findDOMNode(labelRef.current)\n    setLabelWidth(labelNode != null ? labelNode.offsetWidth : 0)\n  }, [label])\n\n  return (\n    <div className={classes.root}>\n      <InputLabel ref={labelRef} htmlFor={id} variant=\"outlined\" className={classes.inputLabel} shrink>\n        {label}\n      </InputLabel>\n      <div className={classes.wrapper}>\n        <div id={id} className={classes.content}>\n          {children}\n          <NotchedOutline notched labelWidth={labelWidth} className={classes.notch} />\n        </div>\n      </div>\n      {!!helperText && <FormHelperText variant=\"outlined\">{helperText}</FormHelperText>}\n    </div>\n  )\n}\nexport default InputOutline\n","export default [\n  { date: 'Dec 25', label: 'Christmas Day', color: 10 },\n  { date: 'Jan 01', label: \"New Year's Day\", color: 3 },\n  { date: 'Apr 01', label: \"April's Fool Day\", color: 2 },\n]\n","import today from './today'\nimport normalizeDate from './normalizeDate'\n\nexport default date => {\n  const future = normalizeDate(date).set('year', today.year())\n  return future.isBefore(today) ? future.set('year', today.year() + 1) : future\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport { name } from './package.json'\n\nconst styles = theme => ({\n  suggestions: {\n    textAlign: 'right',\n    marginTop: theme.spacing(2),\n  },\n  suggestionButton: {\n    display: 'inline-block',\n    '&:not(:last-child):after': {\n      content: '\",\"',\n      marginRight: theme.spacing(0.5),\n    },\n  },\n  colorsWrapper: {\n    marginTop: theme.spacing(2),\n  },\n  picker: {\n    width: '100%',\n  },\n  dialogPaper: {\n    backgroundColor: theme.palette.background.default,\n  },\n  formContent: {\n    padding: theme.spacing(1, 0, 3),\n  },\n})\n\nexport default makeStyles(styles, { name })\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport Divider from '@material-ui/core/Divider'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { DatePicker } from '@material-ui/pickers'\nimport { useTheme } from '@material-ui/core/styles'\n\nimport ColorPicker from '../ColorPicker'\nimport DateCard from '../DateCard'\nimport MicroButton from '../MicroButton'\nimport InputOutline from '../InputOutline'\nimport DateCardList from '../DateCardList'\n\nimport useCardColors from '../../utils/useCardColors'\nimport suggestions from '../../constants/suggestions'\n\nimport backToTheFuture from '../../utils/backToTheFuture'\nimport normalizeDate from '../../utils/normalizeDate'\nimport today from '../../utils/today'\n\nimport useStyles from './EntryUpdater.styles.js'\n\nfunction EntryUpdater(props) {\n  const classes = useStyles()\n  const cardColors = useCardColors()\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'))\n\n  const entryData = props.data || {}\n  const isEditing = typeof props.data === 'object' && props.data !== null\n  const randomColor = cardColors.getRandomColor()\n\n  const [newId] = React.useState(entryData.id || Date.now())\n  const [newDate, setNewDate] = React.useState(entryData.date || today)\n  const [newLabel, setNewLabel] = React.useState(entryData.label || '')\n  const [newColor, setNewColor] = React.useState(entryData.id ? entryData.color : randomColor)\n\n  const previewData = {\n    date: newDate,\n    label: newLabel,\n    color: newColor,\n  }\n\n  const handleDateChange = date => {\n    setNewDate(date)\n  }\n\n  const handleLabelChange = e => {\n    setNewLabel(e.target.value)\n  }\n\n  const handleColorChange = idx => {\n    setNewColor(idx)\n  }\n\n  const handleSave = () => {\n    if (!normalizeDate(newDate).isValid()) {\n      return\n    }\n    props.onRequestSave({\n      id: newId,\n      date: normalizeDate(newDate),\n      label: newLabel,\n      color: newColor,\n    })\n  }\n\n  const handleCancel = () => {\n    props.onRequestSave(null)\n  }\n\n  const handleInputSuggestion = ({ date, label, color }) => {\n    setNewDate(backToTheFuture(date))\n    setNewLabel(label)\n    setNewColor(color)\n  }\n\n  const renderSuggestions = () => {\n    if (isEditing) {\n      return null\n    }\n    return (\n      <div>\n        <Typography component=\"span\" variant=\"caption\" color=\"textSecondary\">\n          Suggestions:\n        </Typography>{' '}\n        {suggestions.map(event => (\n          <MicroButton key={event.color} className={classes.suggestionButton} onClick={() => handleInputSuggestion(event)}>\n            {event.label}\n          </MicroButton>\n        ))}\n      </div>\n    )\n  }\n\n  return (\n    <Dialog\n      fullScreen={fullScreen}\n      disableBackdropClick\n      open\n      fullWidth\n      maxWidth=\"sm\"\n      onClose={handleCancel}\n      aria-labelledby=\"form-dialog-title\"\n      PaperProps={{ className: classes.dialogPaper }}\n    >\n      <DialogTitle id=\"form-dialog-title\">{isEditing ? 'Editing' : 'Creating a'} counter</DialogTitle>\n      <DateCardList single>\n        <DateCard data={previewData} interactive={false} dividerAfter dividerBefore />\n      </DateCardList>\n      <DialogContent>\n        {isEditing ? null : <div className={classes.suggestions}>{renderSuggestions()}</div>}\n        <div className={classes.formContent}>\n          <DatePicker\n            showToolbar={false}\n            className={classes.picker}\n            label=\"Date\"\n            onChange={handleDateChange}\n            value={newDate}\n            fullWidth\n            inputFormat=\"DD/MM/YYYY\"\n            autoOk\n            minDate={new Date('1900-01-01')}\n            maxDate={new Date('2100-12-31')}\n            renderInput={props => (\n              <TextField\n                margin=\"normal\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                {...props}\n                helperText={!isEditing && 'dd/mm/yyyy'}\n                error={!normalizeDate(newDate).isValid()}\n              />\n            )}\n          />\n          <TextField\n            margin=\"normal\"\n            label=\"Label\"\n            InputLabelProps={{ shrink: true }}\n            fullWidth\n            value={newLabel}\n            onChange={handleLabelChange}\n            variant=\"outlined\"\n            helperText={!isEditing && 'Optional but recommended'}\n          />\n          <div className={classes.colorsWrapper}>\n            <InputOutline id=\"colors\" label=\"Color\" helperText={!isEditing && 'Pick a color to tag your counter'}>\n              <ColorPicker className={classes.colors} selected={newColor} onSelect={handleColorChange} />\n            </InputOutline>\n          </div>\n        </div>\n      </DialogContent>\n      <Divider />\n      <DialogActions>\n        <Button onClick={handleCancel} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={handleSave}\n          disabled={!normalizeDate(newDate).isValid()}\n          color=\"primary\"\n          variant={newLabel && newDate ? 'contained' : 'text'}\n        >\n          Save\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default EntryUpdater\n","import React from 'react'\nimport cx from 'classnames'\nimport createPersistedState from 'use-persisted-state'\n\nimport Typography from '@material-ui/core/Typography'\nimport { useTheme } from '@material-ui/core/styles'\n\nimport MicroButton from '../MicroButton'\n\nconst usePrivacyState = createPersistedState('showPrivacy')\n\nfunction Footer({ className, ...props }) {\n  const [showPrivacy, setShowPrivacy] = usePrivacyState(true)\n  const theme = useTheme()\n\n  const openSource = (\n    <a href=\"https://github.com/pierrecholhot/dayscounter.app/\" target=\"_blank\" rel=\"noopener noreferrer\">\n      open source\n    </a>\n  )\n\n  const madeWithLove = (\n    <a href=\"https://pierre.cx\" target=\"_blank\" rel=\"noopener noreferrer\">\n      made with love\n    </a>\n  )\n\n  const themeSwitcher = <MicroButton onClick={props.onRequestSwitchTheme}>{theme.palette.type === 'dark' ? 'light' : 'dark'} theme</MicroButton>\n\n  const renderPrivacyStatement = () => {\n    if (!showPrivacy) {\n      return null\n    }\n    return (\n      <Typography variant=\"body2\">\n        <strong>Privacy:</strong> Your data is never shared or stored outside of this browser.{' '}\n        <MicroButton onClick={() => setShowPrivacy(false)}>Dismiss</MicroButton>\n      </Typography>\n    )\n  }\n\n  return (\n    <div className={cx(className)}>\n      <Typography variant=\"body2\" gutterBottom>\n        # {openSource} # {madeWithLove} # {themeSwitcher}\n      </Typography>\n      {renderPrivacyStatement()}\n    </div>\n  )\n}\n\nexport default Footer\n","import { makeStyles } from '@material-ui/core/styles'\nimport { name } from './package.json'\n\nconst styles = theme => ({\n  root: {\n    margin: theme.spacing(0, 'auto'),\n    maxWidth: theme.spacing(40),\n    width: '100%',\n  },\n})\n\nexport default makeStyles(styles, { name })\n","import React from 'react'\nimport cx from 'classnames'\n\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport Button from '@material-ui/core/Button'\n\nimport useStyles from './CTA.styles.js'\n\nfunction CTA({ className, ...props }) {\n  const classes = useStyles()\n\n  const baseProps = {\n    className: cx(classes.root, className),\n    size: 'large',\n    variant: 'contained',\n    color: 'secondary',\n    startIcon: <AddCircleOutlineIcon />,\n  }\n\n  return (\n    <Button {...baseProps} {...props}>\n      Create counter\n    </Button>\n  )\n}\n\nexport default CTA\n","import { makeStyles } from '@material-ui/core/styles'\nimport { name } from './package.json'\n\nconst styles = theme => ({\n  title: {\n    margin: theme.spacing(0, 0, 2),\n    fontSize: '3rem',\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '4rem',\n    },\n    [theme.breakpoints.up('md')]: {\n      fontSize: theme.typography.h1.fontSize,\n    },\n    [theme.breakpoints.up('lg')]: {\n      fontSize: 60,\n    },\n    '& a': {\n      display: 'inline-block',\n      position: 'relative',\n      '&::after': {\n        content: '\".app\"',\n        fontSize: '50%',\n        color: theme.palette.secondary.light,\n        position: 'absolute',\n        right: 0,\n        top: -14,\n        [theme.breakpoints.up('md')]: {\n          top: -20,\n        },\n        [theme.breakpoints.up('lg')]: {\n          top: -14,\n        },\n      },\n    },\n    '& a:hover': { textDecoration: 'none' },\n  },\n  intro: {\n    display: 'inline-block',\n    fontSize: '1.6rem',\n    margin: theme.spacing(0, 0, 4),\n    maxWidth: 350,\n    [theme.breakpoints.up('sm')]: {\n      fontSize: '2rem',\n      maxWidth: 420,\n    },\n    [theme.breakpoints.up('md')]: {\n      fontSize: theme.typography.h4.fontSize,\n      maxWidth: 450,\n    },\n  },\n})\n\nexport default makeStyles(styles, { name })\n","import React from 'react'\nimport cx from 'classnames'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport CTA from '../CTA'\n\nimport useStyles from './Header.styles.js'\n\nfunction Header({ className, ...props }) {\n  const classes = useStyles()\n\n  return (\n    <div className={cx(className)}>\n      <Typography variant=\"h1\" component=\"h1\" className={classes.title}>\n        <a href=\"https://dayscounter.app/\">Days counter</a>\n      </Typography>\n      <Typography variant=\"h4\" component=\"h2\" className={classes.intro}>\n        Track and count <strong>days since</strong> and <strong>days until</strong> a certain date\n      </Typography>\n      <div>\n        <CTA onClick={props.onRequestCreate} />\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","export default [\n  { label: 'My birthday! 🎉', date: 'Mar 4', color: 1 },\n  { label: 'International Talk Like a Pirate Day', date: 'Sep 19', color: 2 },\n  { label: 'Christmas 🎄', date: 'Dec 25', color: 3 },\n  { label: 'Our anniversary ❤️', date: 'Nov 25', color: 4 },\n  { label: 'Put A Pillow On Your Fridge Day', date: 'May 29', color: 5 },\n]\n","export const bigInt = (number = 0) => number > 4\n\nexport const bigList = (data = []) => bigInt(data.length)\n","import normalizeDate from './normalizeDate'\n\nexport function sortDatesAsc(data = []) {\n  return [...data].sort((a, b) => {\n    return normalizeDate(a.date).isBefore(normalizeDate(b.date)) ? 1 : -1\n  })\n}\n\nexport function sortDatesDsc(data = []) {\n  return [...data].sort((a, b) => {\n    return normalizeDate(a.date).isBefore(normalizeDate(b.date)) ? -1 : 1\n  })\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport { name } from './package.json'\n\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing(0, 2),\n    [theme.breakpoints.up('sm')]: {\n      padding: theme.spacing(0, 4),\n    },\n  },\n  header: {\n    margin: theme.spacing(6, 0, 0),\n    textAlign: 'center',\n    [theme.breakpoints.up('lg')]: {\n      margin: theme.spacing(0),\n      textAlign: 'left',\n    },\n  },\n  headers: {\n    [theme.breakpoints.up('lg')]: {\n      height: '90vh',\n      position: 'sticky',\n      top: 0,\n    },\n  },\n  content: {\n    maxWidth: 720,\n    margin: theme.spacing(0, 'auto'),\n    paddingTop: theme.spacing(6),\n    [theme.breakpoints.up('lg')]: {\n      margin: theme.spacing(0),\n      padding: theme.spacing(10, 0),\n    },\n  },\n  list: {\n    margin: theme.spacing(0, 0, 4, 0),\n  },\n  examples: {\n    [theme.breakpoints.up('lg')]: {\n      height: `calc(100vh - ${theme.spacing(20)}px)`,\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n      '& > div': {\n        flex: 1,\n      },\n    },\n  },\n  footer: {\n    marginTop: theme.spacing(4),\n    marginBottom: theme.spacing(2),\n    textAlign: 'center',\n    [theme.breakpoints.up('lg')]: {\n      marginBottom: theme.spacing(0),\n      textAlign: 'left',\n    },\n  },\n})\n\nexport default makeStyles(styles, { name })\n","import React from 'react'\nimport createPersistedState from 'use-persisted-state'\nimport { useSnackbar } from 'notistack'\n\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport Hidden from '@material-ui/core/Hidden'\n\nimport DateCard from '../../components/DateCard'\nimport DateCardList from '../../components/DateCardList'\nimport EntryUpdater from '../../components/EntryUpdater'\nimport Footer from '../../components/Footer'\nimport Header from '../../components/Header'\n\nimport examples from '../../constants/examples'\n\nimport backToTheFuture from '../../utils/backToTheFuture'\nimport formatDate from '../../utils/formatDate'\nimport normalizeDate from '../../utils/normalizeDate'\nimport today from '../../utils/today'\nimport useUpdateNotification from '../../utils/useUpdateNotification'\nimport { bigList, bigInt } from '../../utils/bigData'\nimport { sortDatesAsc, sortDatesDsc } from '../../utils/sortDates'\n\nimport useStyles from './App.styles.js'\n\nconst useDataStoreState = createPersistedState('datastore')\n\nfunction App(props) {\n  const classes = useStyles()\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\n  const updateNotification = useUpdateNotification()\n  const [isCreatingEntry, setIsCreatingEntry] = React.useState(false)\n  const [cardBeingEdited, setCardBeingEdited] = React.useState(null)\n  const [datastore, setDatastore] = useDataStoreState([])\n  const deletedEntries = datastore.filter(e => e.deleted)\n\n  const handleRequestUndo = data => {\n    const payload = { ...data, deleted: false }\n    handleRequestUpdate(payload)\n    closeSnackbar(data.id)\n  }\n\n  const handleActualDelete = data => {\n    setDatastore(cds => cds.filter(entry => entry.id !== data.id))\n  }\n\n  const handleRequestDuplicate = data => {\n    handleRequestCreate({ ...data, id: Date.now() })\n  }\n\n  const handleRequestDelete = data => {\n    const payload = { ...data, deleted: true }\n    handleRequestUpdate(payload)\n    enqueueSnackbar(`Deleted « ${data.label || formatDate(data.date)} »`, {\n      key: data.id,\n      action: () => renderSnackbarUndo(data),\n      onClose: (e, reason) => {\n        if (reason !== 'instructed' && reason !== 'clickaway') {\n          handleActualDelete(data)\n        }\n      },\n    })\n  }\n\n  const handleRequestUpdate = data => {\n    if (!data) {\n      setCardBeingEdited(null)\n      return\n    }\n    const idx = datastore.findIndex(el => el.id === data.id)\n    const updatedDatastore = [...datastore]\n    updatedDatastore[idx] = data\n    setDatastore(updatedDatastore)\n    setCardBeingEdited(null)\n  }\n\n  const handleRequestCreate = data => {\n    if (data) {\n      setDatastore(cds => [...cds, data])\n    }\n    setIsCreatingEntry(false)\n  }\n\n  const renderSnackbarUndo = data => (\n    <Button color=\"primary\" size=\"small\" onClick={() => handleRequestUndo(data)}>\n      Undo\n    </Button>\n  )\n\n  const renderCard = data => {\n    return (\n      <DateCard\n        data={data}\n        key={data.id}\n        onRequestEdit={() => setCardBeingEdited(data)}\n        onRequestDuplicate={() => handleRequestDuplicate(data)}\n        onRequestDelete={() => handleRequestDelete(data)}\n      />\n    )\n  }\n\n  const renderExamples = () => {\n    if (datastore.length) {\n      return null\n    }\n    const withDates = examples.map(entry => ({ ...entry, date: backToTheFuture(entry.date) }))\n    return (\n      <div className={classes.examples}>\n        <DateCardList subheader=\"Some examples below\">\n          {sortDatesDsc(withDates).map(entry => (\n            <DateCard key={entry.id} data={entry} interactive={false} />\n          ))}\n        </DateCardList>\n      </div>\n    )\n  }\n\n  const renderCardCreator = () => {\n    if (!isCreatingEntry) {\n      return null\n    }\n    return <EntryUpdater onRequestSave={handleRequestCreate} />\n  }\n\n  const renderCardEditor = () => {\n    if (!cardBeingEdited) {\n      return null\n    }\n    return <EntryUpdater data={cardBeingEdited} onRequestSave={handleRequestUpdate} />\n  }\n\n  const getTotalCount = data => {\n    if (!bigList(data)) {\n      return null\n    }\n\n    const total = data.length\n    // exclude deleted entries from total\n    if (deletedEntries.length) {\n      const totalWithoutDeleted = total - deletedEntries.length\n      return bigInt(totalWithoutDeleted) ? `(${totalWithoutDeleted})` : null\n    }\n    return `(${total})`\n  }\n\n  const renderCounters = (label, counters) => {\n    if (!counters.length || counters.length === deletedEntries.length) {\n      return null\n    }\n    return (\n      <DateCardList\n        className={classes.list}\n        subheader={\n          <React.Fragment>\n            {label} Counters {getTotalCount(counters)}\n          </React.Fragment>\n        }\n      >\n        {counters.map(renderCard)}\n      </DateCardList>\n    )\n  }\n\n  // const renderTodaysDate = () => {\n  //   if (!datastore.length) {\n  //     return null\n  //   }\n  //   return (\n  //     <Typography component=\"div\" align=\"center\" color=\"textSecondary\" variant=\"overline\" paragraph>\n  //       ● {today.format('dddd, MMMM D, YYYY')} ●\n  //     </Typography>\n  //   )\n  // }\n\n  const renderUpcomingCounters = () => {\n    const data = datastore.filter(el => !normalizeDate(el.date).isBefore(today))\n    const counters = sortDatesDsc(data)\n    return renderCounters('Upcoming', counters)\n  }\n\n  const renderPastCounters = () => {\n    const data = datastore.filter(el => normalizeDate(el.date).isBefore(today))\n    const counters = sortDatesAsc(data)\n    return renderCounters('Past', counters)\n  }\n\n  React.useEffect(() => {\n    const showUpdateNotification = () => updateNotification.show()\n    window.addEventListener('DaysCounterAppUpdate', showUpdateNotification, { once: true })\n  }, [updateNotification])\n\n  return (\n    <React.Fragment>\n      <div className={classes.root}>\n        <Grid className={classes.grid} container>\n          <Grid item xs={12} xl={1} />\n          <Grid item xs={12} lg={5} xl={4} className={classes.headers} container justify=\"center\" alignItems=\"center\">\n            <div>\n              <Header className={classes.header} onRequestCreate={() => setIsCreatingEntry(true)} />\n              <Hidden only={['xs', 'sm', 'md']} implementation=\"css\">\n                <Footer className={classes.footer} onRequestSwitchTheme={props.onRequestSwitchTheme} />\n              </Hidden>\n            </div>\n          </Grid>\n          <Grid item xs={12} lg={6} xl={5}>\n            <div className={classes.content}>\n              {renderExamples()}\n              {/*renderTodaysDate()*/}\n              {renderUpcomingCounters()}\n              {renderPastCounters()}\n            </div>\n            <Hidden only={['lg', 'xl']} implementation=\"js\">\n              <Footer className={classes.footer} onRequestSwitchTheme={props.onRequestSwitchTheme} />\n            </Hidden>\n          </Grid>\n        </Grid>\n      </div>\n      {renderCardCreator()}\n      {renderCardEditor()}\n    </React.Fragment>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport { useSnackbar } from 'notistack'\n\nimport Button from '@material-ui/core/Button'\n\nexport default function useUpdateNotification() {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar()\n\n  const opts = {\n    key: 'UpdateNotification',\n    persist: true,\n    preventDuplicate: true,\n    action: (\n      <Button color=\"primary\" size=\"small\" onClick={() => window.location.reload(true)}>\n        Update\n      </Button>\n    ),\n  }\n\n  return {\n    show: () => enqueueSnackbar(`A new version of this app is available`, opts),\n    hide: () => closeSnackbar(opts.key),\n  }\n}\n","import cyan from '@material-ui/core/colors/cyan'\nimport grey from '@material-ui/core/colors/grey'\nimport lime from '@material-ui/core/colors/lime'\nimport pink from '@material-ui/core/colors/pink'\nimport teal from '@material-ui/core/colors/teal'\n\nexport default {\n  headingsFontFamily: \"'Righteous', arial\",\n  backgroundColor: { light: grey['100'], dark: grey['900'] },\n  paperBackgroundColor: { light: '#FFF', dark: grey['A400'] },\n  primaryColor: { light: cyan['800'], dark: cyan['600'] },\n  secondaryColor: { light: pink['800'], dark: pink['600'] },\n  selectionColor: { light: teal['800'], dark: lime['600'] },\n}\n","import 'typeface-roboto'\nimport 'typeface-righteous'\n\nimport theme from '../constants/theme'\n\nconst { selectionColor, backgroundColor, paperBackgroundColor, primaryColor, secondaryColor, headingsFontFamily } = theme\n\nexport default dark => {\n  const key = dark ? 'dark' : 'light'\n\n  const palette = {\n    type: key,\n    primary: { main: primaryColor[key] },\n    secondary: { main: secondaryColor[key] },\n    background: {\n      default: backgroundColor[key],\n      paper: paperBackgroundColor[key],\n    },\n  }\n\n  if (dark) {\n    palette.primary.contrastText = backgroundColor.light\n  }\n\n  const typography = {\n    h1: {\n      fontFamily: headingsFontFamily,\n      color: primaryColor[key],\n    },\n  }\n\n  const overrides = {\n    MuiBackdrop: {\n      root: {\n        backgroundColor: 'rgba(0,0,0,0.8)',\n      },\n    },\n    MuiPaper: {\n      root: {\n        transitionProperty: 'background-color',\n        transitionDuration: '250ms',\n        transitionTimingFunction: 'cubic-bezier(0.4, 0, 0.6, 1)',\n      },\n    },\n    MuiListSubheader: {\n      sticky: {\n        backgroundColor: paperBackgroundColor[key],\n        transitionProperty: 'background-color',\n        transitionDuration: '250ms',\n        transitionTimingFunction: 'cubic-bezier(0.4, 0, 0.6, 1)',\n      },\n    },\n    MuiCssBaseline: {\n      '@global': {\n        'html, body, #root': {\n          width: '100%',\n          height: '100%',\n        },\n        body: {\n          '-webkit-tap-highlight-color': 'transparent',\n          transitionProperty: 'background-color',\n          transitionDuration: '250ms',\n          transitionTimingFunction: 'cubic-bezier(0.4, 0, 0.6, 1)',\n        },\n        '::selection': {\n          backgroundColor: selectionColor[key],\n          color: backgroundColor[key],\n        },\n        a: {\n          color: primaryColor[key],\n          textDecoration: 'none',\n          '&:hover, &:focus': {\n            textDecoration: 'underline',\n            outline: 'none',\n          },\n        },\n      },\n    },\n  }\n\n  return {\n    typography,\n    palette,\n    overrides,\n  }\n}\n","import React from 'react'\nimport DayJsUtils from '@date-io/dayjs'\nimport { SnackbarProvider } from 'notistack'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { LocalizationProvider } from '@material-ui/pickers'\n\nimport App from '../App'\n\nimport makeTheme from '../../utils/makeTheme'\n\nfunction Root(props) {\n  const [isDarkTheme, setIsDarkTheme] = React.useState(false)\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)')\n\n  React.useEffect(() => {\n    setIsDarkTheme(prefersDarkMode)\n  }, [prefersDarkMode])\n\n  const theme = createMuiTheme(makeTheme(isDarkTheme))\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <LocalizationProvider dateAdapter={DayJsUtils}>\n        <SnackbarProvider maxSnack={3}>\n          <App onRequestSwitchTheme={() => setIsDarkTheme(!isDarkTheme)} />\n        </SnackbarProvider>\n      </LocalizationProvider>\n    </ThemeProvider>\n  )\n}\n\nexport default Root\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA')\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all tabs for this page are closed. See https://bit.ly/CRA-PWA.')\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","export default async registration => {\n  if (registration && registration.waiting) {\n    await registration.unregister()\n    registration.waiting.postMessage({ type: 'SKIP_WAITING' })\n    window.dispatchEvent(new Event('DaysCounterAppUpdate'))\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\nimport advancedFormat from 'dayjs/plugin/advancedFormat'\n\nimport Root from './containers/Root'\nimport * as serviceWorker from './serviceWorker'\nimport broadcastSWUpdate from './utils/broadcastSWUpdate'\n\nimport { name, version } from '../package.json'\n\ndayjs.extend(advancedFormat)\ndayjs.extend(relativeTime)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.register({ onUpdate: broadcastSWUpdate })\n\nconsole.log(name, version)\n"],"sourceRoot":""}